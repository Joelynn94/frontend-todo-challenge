{"version":3,"sources":["components/ThemeToggle/ThemeToggle.js","components/TodoInput/TodoInput.js","components/TodoFilters/TodoFilter.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["ThemeToggle","theme","onThemeChange","className","onClick","xmlns","width","height","fill","fillRule","d","TodoInput","todo","onInputChange","onFormSubmit","onSubmit","name","type","placeholder","value","onChange","TodoFilter","filtered","status","onShowAllTodos","onShowActiveTodos","onShowCompletedTodos","onClearCompletedTodos","length","TodoItem","onCompleteTodo","onRemoveTodo","isCompleted","id","stroke","stroke-width","text","TodoList","map","App","useState","setTheme","setTodo","todos","setTodos","setStatus","setFiltered","showAllTodos","showActiveTodos","filter","isActive","showCompletedTodos","useEffect","filterHandler","localStorage","getItem","setItem","JSON","stringify","getLocalStorage","style","backgroundImage","document","body","classList","add","remove","e","preventDefault","target","trim","completed","removed","console","log","clear","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c99ba6f7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ThemeToggle = ({ theme, onThemeChange }) => {\r\n  return (\r\n    <div className='toggle'>\r\n      <button onClick={onThemeChange}>\r\n        {theme === 'light' ? (\r\n          <svg xmlns='http://www.w3.org/2000/svg' width='26' height='26'>\r\n            <path\r\n              fill='#FFF'\r\n              fillRule='evenodd'\r\n              d='M13 0c.81 0 1.603.074 2.373.216C10.593 1.199 7 5.43 7 10.5 7 16.299 11.701 21 17.5 21c2.996 0 5.7-1.255 7.613-3.268C23.22 22.572 18.51 26 13 26 5.82 26 0 20.18 0 13S5.82 0 13 0z'\r\n            />\r\n          </svg>\r\n        ) : (\r\n          <svg xmlns='http://www.w3.org/2000/svg' width='26' height='26'>\r\n            <path\r\n              fill='#FFF'\r\n              fillRule='evenodd'\r\n              d='M13 21a1 1 0 011 1v3a1 1 0 11-2 0v-3a1 1 0 011-1zm-5.657-2.343a1 1 0 010 1.414l-2.121 2.121a1 1 0 01-1.414-1.414l2.12-2.121a1 1 0 011.415 0zm12.728 0l2.121 2.121a1 1 0 01-1.414 1.414l-2.121-2.12a1 1 0 011.414-1.415zM13 8a5 5 0 110 10 5 5 0 010-10zm12 4a1 1 0 110 2h-3a1 1 0 110-2h3zM4 12a1 1 0 110 2H1a1 1 0 110-2h3zm18.192-8.192a1 1 0 010 1.414l-2.12 2.121a1 1 0 01-1.415-1.414l2.121-2.121a1 1 0 011.414 0zm-16.97 0l2.121 2.12A1 1 0 015.93 7.344L3.808 5.222a1 1 0 011.414-1.414zM13 0a1 1 0 011 1v3a1 1 0 11-2 0V1a1 1 0 011-1z'\r\n            />\r\n          </svg>\r\n        )}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;\r\n","import React from 'react';\r\n\r\nconst TodoInput = ({ todo, onInputChange, onFormSubmit }) => {\r\n  return (\r\n    <form className='todo-input' onSubmit={onFormSubmit}>\r\n      <input\r\n        name='todo'\r\n        type='text'\r\n        placeholder='Create a new todo'\r\n        value={todo}\r\n        onChange={onInputChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoInput;\r\n","import React from 'react';\r\n\r\nconst TodoFilter = ({\r\n  filtered,\r\n  status,\r\n  onShowAllTodos,\r\n  onShowActiveTodos,\r\n  onShowCompletedTodos,\r\n  onClearCompletedTodos,\r\n}) => {\r\n  return (\r\n    <div className='todo-filters'>\r\n      <span className='todo-filters__text'>\r\n        {filtered.length === 1\r\n          ? `${filtered.length} item left`\r\n          : `${filtered.length} items left`}\r\n      </span>\r\n      <button\r\n        className={\r\n          status === 'all'\r\n            ? 'todo-filters__all active-link'\r\n            : 'todo-filters__all'\r\n        }\r\n        onClick={onShowAllTodos}\r\n      >\r\n        All\r\n      </button>\r\n      <button\r\n        className={\r\n          status === 'active'\r\n            ? 'todo-filters__active active-link'\r\n            : 'todo-filters__active '\r\n        }\r\n        onClick={onShowActiveTodos}\r\n      >\r\n        Active\r\n      </button>\r\n      <button\r\n        className={\r\n          status === 'completed'\r\n            ? 'todo-filters__completed active-link'\r\n            : 'todo-filters__completed'\r\n        }\r\n        onClick={onShowCompletedTodos}\r\n      >\r\n        Completed\r\n      </button>\r\n      <button className='todo-filters__clear' onClick={onClearCompletedTodos}>\r\n        Clear Completed\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoFilter;\r\n","import React from 'react';\r\n\r\nconst TodoItem = ({ todo, onCompleteTodo, onRemoveTodo }) => {\r\n  return (\r\n    <li className={todo.isCompleted ? 'todo-item todo-completed' : 'todo-item'}>\r\n      <button className='todo-btn' onClick={() => onCompleteTodo(todo.id)}>\r\n        {todo.isCompleted && (\r\n          <span className='todo-btn__check'>\r\n            <svg xmlns='http://www.w3.org/2000/svg' width='11' height='9'>\r\n              <path\r\n                fill='none'\r\n                stroke='#FFF'\r\n                stroke-width='2'\r\n                d='M1 4.304L3.696 7l6-6'\r\n              />\r\n            </svg>\r\n          </span>\r\n        )}\r\n      </button>\r\n      <p>{todo.text}</p>\r\n      <button className='todo-delete' onClick={() => onRemoveTodo(todo.id)}>\r\n        <span className='todo-delete__x'>\r\n          <svg xmlns='http://www.w3.org/2000/svg' width='18' height='18'>\r\n            <path\r\n              fill='#494C6B'\r\n              fillRule='evenodd'\r\n              d='M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z'\r\n            />\r\n          </svg>\r\n        </span>\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport TodoFilter from '../TodoFilters/TodoFilter';\r\nimport TodoItem from '../TodoItem/TodoItem';\r\n\r\nconst TodoList = ({\r\n  filtered,\r\n  status,\r\n  onShowAllTodos,\r\n  onShowActiveTodos,\r\n  onShowCompletedTodos,\r\n  onCompleteTodo,\r\n  onRemoveTodo,\r\n  onClearCompletedTodos,\r\n}) => {\r\n  return (\r\n    <ul className='todo-list'>\r\n      {filtered.map((todo) => (\r\n        <TodoItem\r\n          key={todo.id}\r\n          todo={todo}\r\n          onCompleteTodo={onCompleteTodo}\r\n          onRemoveTodo={onRemoveTodo}\r\n        />\r\n      ))}\r\n      <TodoFilter\r\n        filtered={filtered}\r\n        status={status}\r\n        onShowAllTodos={onShowAllTodos}\r\n        onShowActiveTodos={onShowActiveTodos}\r\n        onShowCompletedTodos={onShowCompletedTodos}\r\n        onClearCompletedTodos={onClearCompletedTodos}\r\n      />\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport ThemeToggle from './components/ThemeToggle/ThemeToggle';\r\nimport TodoInput from './components/TodoInput/TodoInput';\r\nimport TodoList from './components/TodoList/TodoList';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [theme, setTheme] = useState('light');\r\n  const [todo, setTodo] = useState('');\r\n  const [todos, setTodos] = useState([]);\r\n  const [status, setStatus] = useState('all');\r\n  const [filtered, setFiltered] = useState([]);\r\n\r\n  // useEffect to update the UI\r\n  useEffect(() => {\r\n    filterHandler();\r\n    getLocalStorage();\r\n    saveLocalStorage();\r\n  }, [todos, status, theme]);\r\n\r\n  // save theme and todos to local storage\r\n  function saveLocalStorage() {\r\n    localStorage.setItem('todos', JSON.stringify(todos));\r\n    localStorage.setItem('theme', JSON.stringify(theme));\r\n  }\r\n\r\n  // get theme and todos from local storage\r\n  function getLocalStorage() {\r\n    if (localStorage.getItem('todos') === null) {\r\n      localStorage.setItem('todos', JSON.stringify([]));\r\n    } else {\r\n      localStorage.setItem('todos', JSON.stringify(todos));\r\n    }\r\n\r\n    if (localStorage.getItem('theme') === null) {\r\n      localStorage.setItem('theme', JSON.stringify(''));\r\n    } else {\r\n      localStorage.setItem('theme', JSON.stringify(theme));\r\n    }\r\n  }\r\n\r\n  // add and remove light/dark class to the document body\r\n  function handleThemeChange() {\r\n    if (theme === 'light') {\r\n      setTheme('dark');\r\n      document.body.classList.add('dark');\r\n      document.body.classList.remove('light');\r\n    } else {\r\n      setTheme('light');\r\n      document.body.classList.add('light');\r\n      document.body.classList.remove('dark');\r\n    }\r\n  }\r\n\r\n  // handle the todo input change\r\n  function handleInputChange(e) {\r\n    setTodo(e.target.value.trim());\r\n  }\r\n\r\n  // handle when user submits inside the input\r\n  function handleFormSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (todo !== '') {\r\n      setTodos([\r\n        ...todos,\r\n        {\r\n          id: todos.length + 1,\r\n          text: todo,\r\n          isCompleted: false,\r\n          isActive: true,\r\n        },\r\n      ]);\r\n    }\r\n    setTodo('');\r\n  }\r\n\r\n  // change a todo's status i.e. complete and active status to the opposite of what they were previously\r\n  function completeTodo(id) {\r\n    const completed = todos.map((todo) => {\r\n      return todo.id === id\r\n        ? { ...todo, isCompleted: !todo.isCompleted, isActive: !todo.isActive }\r\n        : todo;\r\n    });\r\n    setTodos(completed);\r\n  }\r\n\r\n  // remove a todo based in the id that was clicked\r\n  function removeTodo(id) {\r\n    const removed = todos.filter((todo) => {\r\n      return todo.id !== id;\r\n    });\r\n    console.log(todo);\r\n    setTodos(removed);\r\n  }\r\n\r\n  // show all of the todos\r\n  function showAllTodos() {\r\n    setFiltered(todos);\r\n    setStatus('all');\r\n  }\r\n\r\n  // show only todos that are active\r\n  function showActiveTodos() {\r\n    setFiltered(todos.filter((todo) => todo.isActive));\r\n    setStatus('active');\r\n  }\r\n\r\n  // show only todos that are completed\r\n  function showCompletedTodos() {\r\n    setFiltered(todos.filter((todo) => todo.isCompleted));\r\n    setStatus('completed');\r\n  }\r\n\r\n  // clear all of the completed todos\r\n  function clearCompletedTodos() {\r\n    const clear = todos.filter((todo) => {\r\n      return todo.isCompleted !== true;\r\n    });\r\n    setTodos(clear);\r\n  }\r\n\r\n  // function to handle the different statuses\r\n  function filterHandler() {\r\n    switch (status) {\r\n      case 'active':\r\n        showActiveTodos();\r\n        break;\r\n      case 'completed':\r\n        showCompletedTodos();\r\n        break;\r\n      default:\r\n        showAllTodos();\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className='app-header'\r\n        style={\r\n          theme === 'light'\r\n            ? { backgroundImage: 'url(/images/bg-desktop-light.jpg)' }\r\n            : { backgroundImage: 'url(/images/bg-desktop-dark.jpg)' }\r\n        }\r\n      >\r\n        <div className='container'>\r\n          <header className='todo-header'>\r\n            <h1 className='heading'>TODO App</h1>\r\n            <ThemeToggle theme={theme} onThemeChange={handleThemeChange} />\r\n            <TodoInput\r\n              onFormSubmit={handleFormSubmit}\r\n              todo={todo}\r\n              onInputChange={handleInputChange}\r\n            />\r\n          </header>\r\n        </div>\r\n      </div>\r\n      <main className='todo-main'>\r\n        <div className='container'>\r\n          <TodoList\r\n            todos={todos}\r\n            filtered={filtered}\r\n            status={status}\r\n            onShowAllTodos={showAllTodos}\r\n            onShowActiveTodos={showActiveTodos}\r\n            onShowCompletedTodos={showCompletedTodos}\r\n            onCompleteTodo={completeTodo}\r\n            onRemoveTodo={removeTodo}\r\n            onClearCompletedTodos={clearCompletedTodos}\r\n          />\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}